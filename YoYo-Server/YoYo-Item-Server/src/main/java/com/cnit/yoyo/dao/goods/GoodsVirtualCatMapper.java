package com.cnit.yoyo.dao.goods;

import com.cnit.yoyo.model.goods.GoodsVirtualCat;
import com.cnit.yoyo.model.goods.GoodsVirtualCatExample;
import com.cnit.yoyo.model.goods.GoodsVirtualCatWithBLOBs;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface GoodsVirtualCatMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int countByExample(GoodsVirtualCatExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int deleteByExample(GoodsVirtualCatExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int deleteByPrimaryKey(Integer catId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int insert(GoodsVirtualCatWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int insertSelective(GoodsVirtualCatWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	List<GoodsVirtualCatWithBLOBs> selectByExampleWithBLOBs(GoodsVirtualCatExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	List<GoodsVirtualCat> selectByExample(GoodsVirtualCatExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	GoodsVirtualCatWithBLOBs selectByPrimaryKey(Integer catId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int updateByExampleSelective(@Param("record") GoodsVirtualCatWithBLOBs record,
			@Param("example") GoodsVirtualCatExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int updateByExampleWithBLOBs(@Param("record") GoodsVirtualCatWithBLOBs record,
			@Param("example") GoodsVirtualCatExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int updateByExample(@Param("record") GoodsVirtualCat record, @Param("example") GoodsVirtualCatExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int updateByPrimaryKeySelective(GoodsVirtualCatWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int updateByPrimaryKeyWithBLOBs(GoodsVirtualCatWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_goods_virtual_cat
	 * 
	 * @mbggenerated Thu Mar 26 19:31:15 CST 2015
	 */
	int updateByPrimaryKey(GoodsVirtualCat record);

	int increaseSubcatCount(@Param("catId") Integer parentCatId);

	int decreaseSubcatCount(@Param("catId") Integer parentCatId);
	
	List<GoodsVirtualCatWithBLOBs> selectAllUseful();
}