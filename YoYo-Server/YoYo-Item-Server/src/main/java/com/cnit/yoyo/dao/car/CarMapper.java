package com.cnit.yoyo.dao.car;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.cnit.yoyo.autohome.model.AutohomeCarInfoDTO;
import com.cnit.yoyo.model.car.Car;
import com.cnit.yoyo.model.car.dto.CarDeptDTO;
import com.cnit.yoyo.model.car.dto.CarTypeConfigDTO;
import com.cnit.yoyo.model.car.dto.CarTypeDTO;
import com.cnit.yoyo.model.car.dto.CarTypeDeptDTO;
import com.cnit.yoyo.model.car.dto.CarTypeDetailDTO;

public interface CarMapper {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_car
	 * @mbggenerated  Thu Mar 26 19:29:06 CST 2015
	 */
	int deleteByPrimaryKey(Integer carId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_car
	 * @mbggenerated  Thu Mar 26 19:29:06 CST 2015
	 */
	int insert(Car record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_car
	 * @mbggenerated  Thu Mar 26 19:29:06 CST 2015
	 */
	int insertSelective(Car record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_car
	 * @mbggenerated  Thu Mar 26 19:29:06 CST 2015
	 */
	Car selectByPrimaryKey(Integer carId);
	
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_car
	 * @mbggenerated  Thu Mar 26 19:29:06 CST 2015
	 */
	int updateByPrimaryKeySelective(Car record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_car
	 * @mbggenerated  Thu Mar 26 19:29:06 CST 2015
	 */
	int updateByPrimaryKey(Car record);

	List<Car> findList(Integer carYearId); 
	
	CarTypeDetailDTO findCarTypeDetail(Integer carId);
	
	CarTypeConfigDTO findCarDetail(Integer carId);
	
	List<Car> findCarDetailByIds(Integer [] carId);
	
	List<CarTypeDTO> findCarTypeList(@Param("brandId")Integer brandId,@Param("factoryId")Integer factoryId,
			@Param("carDeptId")Integer carDeptId,@Param("carYearId")Integer carYearId,@Param("gradeId")Integer gradeId,
			@Param("carName")String carName,@Param("keyword")String keyword, @Param("orderStmt")String orderBy);
	
	int findCarTypeByName(CarTypeDTO carMaintian);
	
	int findCarByName(Car record);
	
	Car selectCarByName(String carName);
	
	int insertCarType(CarTypeDTO carMaintian);
	
	List<Integer> findbyDeptId(Integer[] id);

	List<Integer> findbyYearId(Integer[] id);
	
	List<CarTypeDTO> findCarInfo(Integer [] carId);
	
	int updateIsdelByIds(Map<String, Object> params);
	
	/**
	  * @description <b>根据车系查询车型</b>
	  * @author 王鹏
	  * @version 1.0.0
	  * @data 2015-5-11
	  * @param @param deptId
	  * @param @return
	  * @return List<Car>
	*/
	List<Car> selectCarByDept(Integer deptId);
	
	/**
	  * @description <b>询车型</b>
	  * @author 王鹏
	  * @version 1.0.0
	  * @data 2015-5-11
	  * @param @param deptId
	  * @param @return
	  * @return List<Car>
	*/
	List<Car> selectCar(Map<String, Object> param);
	
	
	/**
	 * @Title:  selectByCarDeptId  
	 * @Description:  TODO(根据车系id查询车型列表)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-5-11 下午1:43:15  
	 * @version 1.0.0 
	 * @param @param carDeptId
	 * @param @return
	 * @return List<Car>  返回类型 
	 * @throws
	 */
	List<Car> selectByCarDeptId(Integer carDeptId);
	
	/**
	  * @description <b>获取车系、车型、车型数据信息</b>
	  * @author 王鹏
	  * @version 1.0.0
	  * @data 2015-5-22
	  * @param @param deptId
	  * @param @return
	  * @return List<CarDeptDTO>
	*/
	CarDeptDTO findCarDetailByDeptId(Integer deptId);
	
	/**
	 * @Title:  selectByBrandId  
	 * @Description:  TODO(根据品牌选择车型)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-6-18 下午4:09:10  
	 * @version 1.0.0 
	 * @param @param brandId
	 * @param @return
	 * @return List<Car>  返回类型 
	 * @throws
	 */
	List<Car> selectByBrandId(Integer brandId);
	
	/**
	 * @description <b>年款条件查询车型,过滤掉没有商品的车型</b>
	 * @author 王鹏
	 * @version 1.0.0
	 * @data 2015年7月30日
	 * @param carYearId
	 * @return
	 * List<Car>
	*/
	List<Car> selectCarByYearHasGoods(Map<String, Object> param);
	/**
	 * @Description:查询爬虫关联车型数据
	 * @param data
	 * @return
	 */
	Car selectCarSpiderData(AutohomeCarInfoDTO data);

	List<CarTypeDeptDTO> findCarByDeptId(Integer data);
}