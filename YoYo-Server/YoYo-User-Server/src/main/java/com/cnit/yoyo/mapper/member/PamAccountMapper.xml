<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cnit.yoyo.dao.member.PamAccountMapper">
  <resultMap id="BaseResultMap" type="com.cnit.yoyo.model.member.PamAccount">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 30 10:44:31 CST 2015.
    -->
    <id column="ACCOUNT_ID" jdbcType="INTEGER" property="accountId" />
    <result column="ACCOUNT_TYPE" jdbcType="VARCHAR" property="accountType" />
    <result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName" />
    <result column="LOGIN_PASSWORD" jdbcType="VARCHAR" property="loginPassword" />
    <result column="ACCOUNT_STATUS" jdbcType="VARCHAR" property="accountStatus" />
    <result column="REG_IP" jdbcType="VARCHAR" property="regIp" />
    <result column="REG_TIME" jdbcType="VARCHAR" property="regTime" />
    <result column="REG_TYPE" jdbcType="VARCHAR" property="regType" />
    <result column="SOURCE" jdbcType="VARCHAR" property="source" />
    <result column="LOGIN_COUNT" jdbcType="INTEGER" property="loginCount" />
    <result column="LOGIN_IP" jdbcType="VARCHAR" property="loginIp" />
    <result column="SALT" jdbcType="VARCHAR" property="salt" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="MOBILE_PHONE" jdbcType="VARCHAR" property="mobilePhone" />
  </resultMap>
  
  <resultMap type="com.cnit.yoyo.model.member.PamAccount" id="userRoleMap" extends="BaseResultMap">  
      <collection property="roles" ofType="com.cnit.yoyo.model.system.Role">  
          <id column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
   		  <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
          <result column="ROLE" property="role" jdbcType="VARCHAR" />
          <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
          <result column="ROLE_STATUS" property="roleStatus" jdbcType="VARCHAR" /> 
      </collection>  
  </resultMap>
  
  <resultMap type="com.cnit.yoyo.model.system.dto.UserListDTO" id="userRoleDTO" extends="BaseResultMap">  
	  <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap type="com.cnit.yoyo.model.member.PamAccount" id="memberResultMap" extends="BaseResultMap">  
	  <result column="MEMBER_LV_ID" jdbcType="INTEGER" property="memberLvId" />
	  <result column="MEMBER_ID" jdbcType="INTEGER" property="memberId" />
	  <result column="NAME" jdbcType="VARCHAR" property="name" />
  </resultMap>
  
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 30 10:44:31 CST 2015.
    -->
    ACCOUNT_ID, ACCOUNT_TYPE, LOGIN_NAME, LOGIN_PASSWORD, ACCOUNT_STATUS, REG_IP, REG_TIME, 
    REG_TYPE, SOURCE, LOGIN_COUNT, LOGIN_IP, SALT, CREATE_TIME, UPDATE_TIME, EMAIL, MOBILE_PHONE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 30 10:44:31 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_pam_account
    where ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
  </select>
  
  <select id="selectAllUserRole" resultMap="userRoleDTO">
    SELECT
    t_pam_account.ACCOUNT_ID,
	t_pam_account.LOGIN_NAME,
	t_desktop_roles.ROLE_ID as roleId,
	t_desktop_roles.ROLE_NAME
	FROM
	t_pam_account
	JOIN t_role_user ON t_role_user.ACCOUNT_ID = t_pam_account.ACCOUNT_ID
	JOIN t_desktop_roles ON t_desktop_roles.ROLE_ID = t_role_user.ROLE_ID
  </select>
  
  <select id="selectAllSiteUserRole" resultMap="userRoleDTO">
    SELECT
    t_pam_account.ACCOUNT_ID,
	t_pam_account.LOGIN_NAME,
	t_business_storeroles.roles_name as roleName
	FROM
	t_pam_account
	JOIN t_site_role_user ON t_site_role_user.ACCOUNT_ID = t_pam_account.ACCOUNT_ID
	JOIN t_business_storeroles ON t_business_storeroles.roles_id = t_site_role_user.ROLE_ID
  </select>
  
    <select id="selectAllUser" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_pam_account
  </select>
  
  <select id="selectAllShop" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_pam_account 
    where ACCOUNT_TYPE > 100 and ACCOUNT_TYPE like '1%'
  </select>
  
    <select id="selectUserRole" resultMap="userRoleMap" parameterType="java.lang.Integer" >
    select u.ACCOUNT_ID, u.ACCOUNT_TYPE, u.LOGIN_NAME, u.LOGIN_PASSWORD, u.ACCOUNT_STATUS, u.REG_IP, u.REG_TIME, 
    u.REG_TYPE, u.SOURCE, u.LOGIN_COUNT, u.LOGIN_IP, u.SALT, u.CREATE_TIME, u.UPDATE_TIME, u.EMAIL, u.MOBILE_PHONE,
    r.ROLE_ID, r.ROLE_NAME, r.ROLE, r.DESCRIPTION, r.ROLE_STATUS, r.WORKGROUND, r.CAT
    from t_pam_account u left join t_role_user ur on u.ACCOUNT_ID = ur.ACCOUNT_ID left join t_desktop_roles r on ur.ROLE_ID=r.ROLE_ID
    where u.ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
  </select>
  
    <select id="selectUser" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_pam_account
    where ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
  </select>
  
      <select id="selectUserRoleByUsername" resultMap="userRoleMap" parameterType="java.lang.String" >
    select u.ACCOUNT_ID, u.ACCOUNT_TYPE, u.LOGIN_NAME, u.LOGIN_PASSWORD, u.ACCOUNT_STATUS, u.REG_IP, u.REG_TIME, 
    u.REG_TYPE, u.SOURCE, u.LOGIN_COUNT, u.LOGIN_IP, u.SALT, u.CREATE_TIME, u.UPDATE_TIME, u.EMAIL, u.MOBILE_PHONE,
    r.ROLE_ID, r.ROLE_NAME, r.ROLE, r.DESCRIPTION, r.ROLE_STATUS, r.WORKGROUND, r.CAT
    from t_pam_account u left join t_role_user ur on u.ACCOUNT_ID = ur.ACCOUNT_ID left join t_desktop_roles r on ur.ROLE_ID=r.ROLE_ID
    where u.LOGIN_NAME = #{loginName,jdbcType=VARCHAR}
  </select>
  
    <select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_pam_account
    where LOGIN_NAME = #{loginName,jdbcType=VARCHAR}
  </select>
  <!-- 查找买家的用户 -->
  <select id="findMemByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_pam_account
    where LOGIN_NAME = #{loginName,jdbcType=VARCHAR} and ACCOUNT_TYPE = '100'
  </select>
  <!-- 查找卖家的用户 -->
  <select id="findShopByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_pam_account
    where LOGIN_NAME = #{loginName,jdbcType=VARCHAR} and ACCOUNT_TYPE > 100 and ACCOUNT_TYPE like '1%'
  </select>
  <!-- 查找后台的用户 -->
  <select id="findMpByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_pam_account
    where LOGIN_NAME = #{loginName,jdbcType=VARCHAR} and ACCOUNT_TYPE like '2%'
  </select>
  <!-- 查找门户的用户，为了防止后台的账户能登录门户 -->
  <select id="findPortalByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_pam_account
    where LOGIN_NAME = #{loginName,jdbcType=VARCHAR} and ACCOUNT_TYPE like '1%'
  </select>
  
  <select id="findByUsernameOrType" resultMap="BaseResultMap" parameterType="com.cnit.yoyo.model.member.PamAccount" >
    select 
    <include refid="Base_Column_List" />
    from t_pam_account
    where LOGIN_NAME = #{loginName,jdbcType=VARCHAR} 
    <if test="accountType != null and accountType != '' ">
        and ACCOUNT_TYPE = #{accountType,jdbcType=VARCHAR}
      </if>
  </select>
  
    <insert id="saveUserRoleLink" parameterType="com.cnit.yoyo.model.system.RoleUserLink" >
    insert into t_role_user (ID, ACCOUNT_ID, ROLE_ID, 
      USER_TYPE)
    values (#{id,jdbcType=BIGINT}, #{user.accountId,jdbcType=BIGINT}, #{role.roleId,jdbcType=BIGINT}, 
      #{userType,jdbcType=VARCHAR})
  </insert>
  
    <delete id="deleteUserRoleLink" parameterType="com.cnit.yoyo.model.system.RoleUserLink" >
    delete from t_role_user
    	<where>  
            <if test="user.accountId != 0">ACCOUNT_ID = #{user.accountId}</if>  
            <if test="role.roleId != 0">and ROLE_ID = #{role.roleId}</if>  
        </where> 
  </delete>
  
  <select id="selectByPrimaryKeySelective" parameterType="com.cnit.yoyo.model.member.PamAccount" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_pam_account where 1=1
		<if test="accountId != null"> AND ACCOUNT_ID = #{accountId,jdbcType=INTEGER}</if>
		<if test="accountType != null"> AND ACCOUNT_TYPE like #{accountType,jdbcType=VARCHAR}</if>
		<if test="loginName != null"> AND LOGIN_NAME = #{loginName,jdbcType=VARCHAR}</if>
		<if test="loginPassword != null"> AND LOGIN_PASSWORD = #{loginPassword,jdbcType=VARCHAR}</if>
		<if test="accountStatus != null"> AND ACCOUNT_STATUS = #{accountStatus,jdbcType=VARCHAR}</if>
		<if test="regIp != null"> AND REG_IP = #{regIp,jdbcType=VARCHAR}</if>
		<if test="regTime != null"> AND REG_TIME = #{regTime,jdbcType=VARCHAR}</if>
		<if test="regType != null"> AND REG_TYPE = #{regType,jdbcType=VARCHAR}</if>
		<if test="source != null"> AND SOURCE = #{source,jdbcType=VARCHAR}</if>
		<if test="loginCount != null"> AND LOGIN_COUNT = #{loginCount,jdbcType=INTEGER}</if>
		<if test="loginIp != null"> AND LOGIN_IP = #{loginIp,jdbcType=VARCHAR}</if>
	</select>
	<select id="selectUnionBySelective" parameterType="com.cnit.yoyo.model.member.PamAccount" resultMap="memberResultMap">
		select p.*,m.MEMBER_ID,m.MEMBER_LV_ID,m.NAME from t_members m inner join  t_pam_account p on m.ACCOUNT_ID=p.ACCOUNT_ID 
		where 1=1
		<if test="accountId != null"> AND p.ACCOUNT_ID = #{accountId,jdbcType=INTEGER}</if>
		<if test="accountType != null"> AND p.ACCOUNT_TYPE like #{accountType,jdbcType=VARCHAR}</if>
		<if test="loginName != null"> AND p.LOGIN_NAME = #{loginName,jdbcType=VARCHAR}</if>
		<if test="loginPassword != null"> AND p.LOGIN_PASSWORD = #{loginPassword,jdbcType=VARCHAR}</if>
		<if test="accountStatus != null"> AND p.ACCOUNT_STATUS = #{accountStatus,jdbcType=VARCHAR}</if>
		<if test="regIp != null"> AND p.REG_IP = #{regIp,jdbcType=VARCHAR}</if>
		<if test="regTime != null"> AND p.REG_TIME = #{regTime,jdbcType=VARCHAR}</if>
		<if test="regType != null"> AND p.REG_TYPE = #{regType,jdbcType=VARCHAR}</if>
		<if test="source != null"> AND p.SOURCE = #{source,jdbcType=VARCHAR}</if>
		<if test="loginCount != null"> AND p.LOGIN_COUNT = #{loginCount,jdbcType=INTEGER}</if>
		<if test="loginIp != null"> AND p.LOGIN_IP = #{loginIp,jdbcType=VARCHAR}</if>
	</select>
	<select id="selectLoginname" resultType="java.lang.Long" parameterType="java.lang.String">
   		select member_id from t_members t where t.account_id=( 
  		select account_id from t_pam_account where LOGIN_NAME = #{loginName,jdbcType=VARCHAR} limit 1)
  </select>
  
  <select id="findByLoginName" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_pam_account where login_name = #{loginName,jdbcType=VARCHAR}
	</select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 30 10:44:31 CST 2015.
    -->
    delete from t_pam_account
    where ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cnit.yoyo.model.member.PamAccount" useGeneratedKeys="true" keyProperty="accountId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 30 10:44:31 CST 2015.
    -->
    insert into t_pam_account (ACCOUNT_ID, ACCOUNT_TYPE, LOGIN_NAME, 
      LOGIN_PASSWORD, ACCOUNT_STATUS, REG_IP, 
      REG_TIME, REG_TYPE, SOURCE, 
      LOGIN_COUNT, LOGIN_IP, SALT, 
      CREATE_TIME, UPDATE_TIME, EMAIL, 
      MOBILE_PHONE)
    values (#{accountId,jdbcType=INTEGER}, #{accountType,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{loginPassword,jdbcType=VARCHAR}, #{accountStatus,jdbcType=VARCHAR}, #{regIp,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=VARCHAR}, #{regType,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, 
      #{loginCount,jdbcType=INTEGER}, #{loginIp,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{mobilePhone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cnit.yoyo.model.member.PamAccount" useGeneratedKeys="true" keyProperty="accountId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 30 10:44:31 CST 2015.
    -->
    insert into t_pam_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        ACCOUNT_ID,
      </if>
      <if test="accountType != null">
        ACCOUNT_TYPE,
      </if>
      <if test="loginName != null">
        LOGIN_NAME,
      </if>
      <if test="loginPassword != null">
        LOGIN_PASSWORD,
      </if>
      <if test="accountStatus != null">
        ACCOUNT_STATUS,
      </if>
      <if test="regIp != null">
        REG_IP,
      </if>
      <if test="regTime != null">
        REG_TIME,
      </if>
      <if test="regType != null">
        REG_TYPE,
      </if>
      <if test="source != null">
        SOURCE,
      </if>
      <if test="loginCount != null">
        LOGIN_COUNT,
      </if>
      <if test="loginIp != null">
        LOGIN_IP,
      </if>
      <if test="salt != null">
        SALT,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="mobilePhone != null">
        MOBILE_PHONE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="regIp != null">
        #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=VARCHAR},
      </if>
      <if test="regType != null">
        #{regType,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cnit.yoyo.model.member.PamAccount">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 30 10:44:31 CST 2015.
    -->
    update t_pam_account
    <set>
      <if test="accountType != null">
        ACCOUNT_TYPE = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        LOGIN_PASSWORD = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        ACCOUNT_STATUS = #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="regIp != null">
        REG_IP = #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        REG_TIME = #{regTime,jdbcType=VARCHAR},
      </if>
      <if test="regType != null">
        REG_TYPE = #{regType,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        SOURCE = #{source,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null">
        LOGIN_COUNT = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null">
        LOGIN_IP = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        SALT = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        MOBILE_PHONE = #{mobilePhone,jdbcType=VARCHAR},
      </if>
    </set>
    where ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cnit.yoyo.model.member.PamAccount">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 30 10:44:31 CST 2015.
    -->
    update t_pam_account
    set ACCOUNT_TYPE = #{accountType,jdbcType=VARCHAR},
      LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      LOGIN_PASSWORD = #{loginPassword,jdbcType=VARCHAR},
      ACCOUNT_STATUS = #{accountStatus,jdbcType=VARCHAR},
      REG_IP = #{regIp,jdbcType=VARCHAR},
      REG_TIME = #{regTime,jdbcType=VARCHAR},
      REG_TYPE = #{regType,jdbcType=VARCHAR},
      SOURCE = #{source,jdbcType=VARCHAR},
      LOGIN_COUNT = #{loginCount,jdbcType=INTEGER},
      LOGIN_IP = #{loginIp,jdbcType=VARCHAR},
      SALT = #{salt,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      MOBILE_PHONE = #{mobilePhone,jdbcType=VARCHAR}
    where ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
  </update>
</mapper>