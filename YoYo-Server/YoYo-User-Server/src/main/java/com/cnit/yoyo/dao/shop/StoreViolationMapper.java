package com.cnit.yoyo.dao.shop;

import com.cnit.yoyo.model.shop.StoreViolation;
import com.cnit.yoyo.model.shop.StoreViolationExample;
import com.cnit.yoyo.model.shop.dto.StoreViolationDTO;
import com.cnit.yoyo.model.shop.dto.StoreViolationQryDTO;

import java.math.BigDecimal;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface StoreViolationMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int countByExample(StoreViolationExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int deleteByExample(StoreViolationExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int insert(StoreViolation record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int insertSelective(StoreViolation record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	List<StoreViolation> selectByExampleWithBLOBs(StoreViolationExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	List<StoreViolation> selectByExample(StoreViolationExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	StoreViolation selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int updateByExampleSelective(@Param("record") StoreViolation record,
			@Param("example") StoreViolationExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int updateByExampleWithBLOBs(@Param("record") StoreViolation record,
			@Param("example") StoreViolationExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int updateByExample(@Param("record") StoreViolation record,
			@Param("example") StoreViolationExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int updateByPrimaryKeySelective(StoreViolation record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int updateByPrimaryKeyWithBLOBs(StoreViolation record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_storeviolation
	 * @mbggenerated  Fri Jun 12 09:26:34 CST 2015
	 */
	int updateByPrimaryKey(StoreViolation record);

	/**
	 * @Title:  selectSumEarnestByCompanyId  
	 * @Description:  TODO(根据companyId查询店铺违规扣除的保证金总数)  
	 * @author <a href="cmlai@chinacnit.com">赖彩�?/a> 
	 * @date 2015-4-28 下午4:35:51  
	 * @version 1.0.0 
	 * @param companyId
	 * @param @return
	 * @return BigDecimal  返回类型 
	 * @throws
	 */
	Double selectSumEarnestByCompanyId(Long companyId);
	
	/**
	 * @Title:  selectByQryDto  
	 * @Description:  TODO(根据查询条件查询对象)  
	 * @author <a href="cmlai@chinacnit.com">赖彩�?/a> 
	 * @date 2015-6-5 下午6:01:08  
	 * @version 1.0.0 
	 * @param @param dto
	 * @param @return
	 * @return List<StoreViolationDTO>  返回类型 
	 * @throws
	 */
	List<StoreViolationDTO> selectByQryDto(StoreViolationQryDTO dto);
	
	/**
	 * @Title:  updateDisabled  
	 * @Description:  TODO(批量更新失效状态)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-6-18 下午1:42:15  
	 * @version 1.0.0 
	 * @param @param idList
	 * @param @param disabled
	 * @param @return
	 * @return int  返回类型 
	 * @throws
	 */
	int updateDisabled(@Param("list")List<Long> idList, @Param("disabled")Integer disabled);

	/**
	 * @Title:  selectByParams  
	 * @Description:  TODO(根据参数查询数据)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-6-25 下午5:46:46  
	 * @version 1.0.0 
	 * @param @param status
	 * @param @param disabled
	 * @param @param startRow
	 * @param @param size
	 * @param @return
	 * @return List<StoreViolation>  返回类型 
	 * @throws
	 */
	List<StoreViolation> selectByParams(@Param("status")Integer status, @Param("disabled")Integer disabled, @Param("processed")Integer processed, @Param("startRow")Integer startRow, @Param("size")Integer size);
	
	/**
	 * @Title:  selectMaxViolationByParams  
	 * @Description:  TODO(根据参数查询数据)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-6-26 下午1:27:48  
	 * @version 1.0.0 
	 * @param @param status
	 * @param @param disabled
	 * @param @param processed
	 * @param @param startRow
	 * @param @param size
	 * @param @return
	 * @return List<StoreViolation>  返回类型 
	 * @throws
	 */
	List<StoreViolation> selectMaxViolationByParams(@Param("status")Integer status, @Param("disabled")Integer disabled, @Param("processed")Integer processed, 
			@Param("storeId")Long storeId, @Param("startRow")Integer startRow, @Param("size")Integer size);
	
	/**
	 * @Title:  selectMaxViolationCountByParams  
	 * @Description:  TODO(根据参数查询数据数量)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-6-26 下午1:32:08  
	 * @version 1.0.0 
	 * @param @param status
	 * @param @param disabled
	 * @param @param processed
	 * @param @param startRow
	 * @param @param size
	 * @param @return
	 * @return int  返回类型 
	 * @throws
	 */
	int selectMaxViolationCountByParams(@Param("status")Integer status, @Param("disabled")Integer disabled, @Param("processed")Integer processed);
	
	/**
	 * @Title:  selectStoreIdCountByParams  
	 * @Description:  TODO(根据参数查询数据数量)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-6-26 下午1:32:08  
	 * @version 1.0.0 
	 * @param @param status
	 * @param @param disabled
	 * @param @param processed
	 * @param @param startRow
	 * @param @param size
	 * @param @return
	 * @return int  返回类型 
	 * @throws
	 */
	int selectStoreIdCountByParams(@Param("status")Integer status, @Param("disabled")Integer disabled, @Param("processed")Integer processed);
	
	/**
	 * @Title:  updateStatusByStoreId  
	 * @Description:  TODO(根据店铺更新违规状态)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-6-26 下午1:38:33  
	 * @version 1.0.0 
	 * @param @param storeId
	 * @param @param status
	 * @param @return
	 * @return int  返回类型 
	 * @throws
	 */
	int updateStatusByStoreId(@Param("storeId")Integer storeId, @Param("status")Integer status);
	
	/**
	 * @Title:  selectStoreIdByIds  
	 * @Description:  TODO(这里用一句话描述这个方法的作用)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-6-26 下午3:29:52  
	 * @version 1.0.0 
	 * @param @param list
	 * @param @param status
	 * @param @param disabled
	 * @param @param processed
	 * @param @return
	 * @return List<Long>  返回类型 
	 * @throws
	 */
	List<Long> selectStoreIdByIds(@Param("list")List<Long> list);
}