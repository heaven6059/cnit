package com.cnit.yoyo.dao.shop;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.cnit.yoyo.model.goods.dto.ShopBrandBLOBsWithLabel;
import com.cnit.yoyo.model.shop.ShopBrand;
import com.cnit.yoyo.model.shop.ShopBrandKey;
import com.cnit.yoyo.model.shop.ShopBrandWithBLOBs;

/**
 * 店铺与品牌的关系
 * @author Administrator
 *
 */
public interface ShopBrandMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_brand
	 * @mbggenerated  Tue Mar 24 10:13:14 CST 2015
	 */
	int deleteByPrimaryKey(ShopBrandKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_brand
	 * @mbggenerated  Tue Mar 24 10:13:14 CST 2015
	 */
	int insert(ShopBrandWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_brand
	 * @mbggenerated  Tue Mar 24 10:13:14 CST 2015
	 */
	int insertSelective(ShopBrandWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_brand
	 * @mbggenerated  Tue Mar 24 10:13:14 CST 2015
	 */
	ShopBrandWithBLOBs selectByPrimaryKey(ShopBrandKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_brand
	 * @mbggenerated  Tue Mar 24 10:13:14 CST 2015
	 */
	int updateByPrimaryKeySelective(ShopBrandWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_brand
	 * @mbggenerated  Tue Mar 24 10:13:14 CST 2015
	 */
	int updateByPrimaryKeyWithBLOBs(ShopBrandWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_brand
	 * @mbggenerated  Tue Mar 24 10:13:14 CST 2015
	 */
	int updateByPrimaryKey(ShopBrand record);
	
	List<ShopBrandBLOBsWithLabel> findBrandBusinessList(ShopBrandWithBLOBs shopBrand);
	List<ShopBrandBLOBsWithLabel> findBrandBusinessByStatus(String status);
	int deleteByPrimaryKeys(Integer[] id);
	void updateLabelBrandById(Map<String, Object> data);
	List<ShopBrandWithBLOBs> findBrandStatus(Map<String, Object> map);
	
	void insertBatchSelective(List<ShopBrandWithBLOBs> list);
	void cancelBrandBusiness(@Param("companyBrandId")Integer companyBrandId);
	
	int judgeCheck(ShopBrandWithBLOBs shopBrand);
	int judgeOldCheck(Integer[] brandIds);
	
	
}