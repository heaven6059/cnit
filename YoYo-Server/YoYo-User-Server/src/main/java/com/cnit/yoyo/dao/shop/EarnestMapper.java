package com.cnit.yoyo.dao.shop;

import com.cnit.yoyo.model.shop.Earnest;
import com.cnit.yoyo.model.shop.EarnestExample;
import com.cnit.yoyo.model.shop.EarnestWithBLOBs;
import com.cnit.yoyo.model.shop.dto.EarnestDTO;

import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface EarnestMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int countByExample(EarnestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int deleteByExample(EarnestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int insert(EarnestWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int insertSelective(EarnestDTO record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	List<EarnestWithBLOBs> selectByExampleWithBLOBs(EarnestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	List<Earnest> selectByExample(EarnestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	EarnestWithBLOBs selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int updateByExampleSelective(@Param("record") EarnestWithBLOBs record,
			@Param("example") EarnestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int updateByExampleWithBLOBs(@Param("record") EarnestWithBLOBs record,
			@Param("example") EarnestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int updateByExample(@Param("record") Earnest record,
			@Param("example") EarnestExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int updateByPrimaryKeySelective(EarnestWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int updateByPrimaryKeyWithBLOBs(EarnestWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_business_earnest_log
	 * @mbggenerated  Mon Jun 01 11:00:46 CST 2015
	 */
	int updateByPrimaryKey(Earnest record);

	/**
	 * @Title:  selectByCompanyId  
	 * @Description:  TODO(根据companyId查询保证金列�?  
	 * @author <a href="cmlai@chinacnit.com">赖彩�?/a> 
	 * @date 2015-4-28 下午4:56:30  
	 * @version 1.0.0 
	 * @param @param companyId
	 * @param @return
	 * @return List<EarnestDTO>  返回类型 
	 * @throws
	 */
	List<EarnestDTO> selectByCompanyId(Long companyId);
	
	/**
	 * @Title:  selectSumEarnestByCompanyId  
	 * @Description:  TODO(根据companyId查询保证金缴纳�?�?  
	 * @author <a href="cmlai@chinacnit.com">赖彩�?/a> 
	 * @date 2015-4-29 上午9:30:43  
	 * @version 1.0.0 
	 * @param @param companyId
	 * @param @return
	 * @return Double  返回类型 
	 * @throws
	 */
	Double selectSumEarnestByCompanyId(Long companyId);
	List<EarnestDTO> findList(EarnestDTO dto);
	
	/**
	 * @Title:  selectByStoreViolationId  
	 * @Description:  TODO(根据店铺违规id查询保证金对象)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-6-26 下午6:28:26  
	 * @version 1.0.0 
	 * @param @param id
	 * @param @return
	 * @return List<EarnestDTO>  返回类型 
	 * @throws
	 */
	List<EarnestDTO> selectByStoreViolationId(Long id);
	
	/**
	 * @Title:  selectEarnestByCompanyId  
	 * @Description:  TODO(查询保证金余额)  
	 * @author <a href="cmlai@chinacnit.com">赖彩妙</a> 
	 * @date 2015-6-26 下午8:13:57  
	 * @version 1.0.0 
	 * @param @param companyId
	 * @param @return
	 * @return Double  返回类型 
	 * @throws
	 */
	Double selectEarnestByCompanyId(Long companyId);
	
}