<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cnit.yoyo.complain.dao.ComplainCommentsMapper">
  <resultMap id="BaseResultMap" type="com.cnit.yoyo.complain.model.ComplainComments">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    <id column="comments_id" jdbcType="BIGINT" property="commentsId" />
    <result column="complain_id" jdbcType="BIGINT" property="complainId" />
    <result column="source" jdbcType="CHAR" property="source" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="image_0" jdbcType="VARCHAR" property="image0" />
    <result column="image_1" jdbcType="VARCHAR" property="image1" />
    <result column="image_2" jdbcType="VARCHAR" property="image2" />
    <result column="image_3" jdbcType="VARCHAR" property="image3" />
    <result column="image_4" jdbcType="VARCHAR" property="image4" />
    <result column="last_modified" jdbcType="DATE" property="lastModified" />
    <result column="disabled" jdbcType="CHAR" property="disabled" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cnit.yoyo.complain.model.ComplainComments">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    comments_id, complain_id, source, author_id, author, image_0, image_1, image_2, image_3, 
    image_4, last_modified, disabled
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.cnit.yoyo.complain.model.ComplainCommentsExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_complain_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.cnit.yoyo.complain.model.ComplainCommentsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_complain_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_complain_comments
    where comments_id = #{commentsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    delete from t_complain_comments
    where comments_id = #{commentsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cnit.yoyo.complain.model.ComplainCommentsExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    delete from t_complain_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cnit.yoyo.complain.model.ComplainComments">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    insert into t_complain_comments (comments_id, complain_id, source, 
      author_id, author, image_0, 
      image_1, image_2, image_3, 
      image_4, last_modified, disabled, 
      comment)
    values (#{commentsId,jdbcType=BIGINT}, #{complainId,jdbcType=BIGINT}, #{source,jdbcType=CHAR}, 
      #{authorId,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, #{image0,jdbcType=VARCHAR}, 
      #{image1,jdbcType=VARCHAR}, #{image2,jdbcType=VARCHAR}, #{image3,jdbcType=VARCHAR}, 
      #{image4,jdbcType=VARCHAR}, #{lastModified,jdbcType=INTEGER}, #{disabled,jdbcType=CHAR}, 
      #{comment,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cnit.yoyo.complain.model.ComplainComments">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    insert into t_complain_comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentsId != null">
        comments_id,
      </if>
      <if test="complainId != null">
        complain_id,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="image0 != null">
        image_0,
      </if>
      <if test="image1 != null">
        image_1,
      </if>
      <if test="image2 != null">
        image_2,
      </if>
      <if test="image3 != null">
        image_3,
      </if>
      <if test="image4 != null">
        image_4,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      <if test="disabled != null">
        disabled,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentsId != null">
        #{commentsId,jdbcType=BIGINT},
      </if>
      <if test="complainId != null">
        #{complainId,jdbcType=BIGINT},
      </if>
      <if test="source != null">
        #{source,jdbcType=CHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="image0 != null">
        #{image0,jdbcType=VARCHAR},
      </if>
      <if test="image1 != null">
        #{image1,jdbcType=VARCHAR},
      </if>
      <if test="image2 != null">
        #{image2,jdbcType=VARCHAR},
      </if>
      <if test="image3 != null">
        #{image3,jdbcType=VARCHAR},
      </if>
      <if test="image4 != null">
        #{image4,jdbcType=VARCHAR},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=INTEGER},
      </if>
      <if test="disabled != null">
        #{disabled,jdbcType=CHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cnit.yoyo.complain.model.ComplainCommentsExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    select count(*) from t_complain_comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    update t_complain_comments
    <set>
      <if test="record.commentsId != null">
        comments_id = #{record.commentsId,jdbcType=BIGINT},
      </if>
      <if test="record.complainId != null">
        complain_id = #{record.complainId,jdbcType=BIGINT},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=CHAR},
      </if>
      <if test="record.authorId != null">
        author_id = #{record.authorId,jdbcType=INTEGER},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.image0 != null">
        image_0 = #{record.image0,jdbcType=VARCHAR},
      </if>
      <if test="record.image1 != null">
        image_1 = #{record.image1,jdbcType=VARCHAR},
      </if>
      <if test="record.image2 != null">
        image_2 = #{record.image2,jdbcType=VARCHAR},
      </if>
      <if test="record.image3 != null">
        image_3 = #{record.image3,jdbcType=VARCHAR},
      </if>
      <if test="record.image4 != null">
        image_4 = #{record.image4,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModified != null">
        last_modified = #{record.lastModified,jdbcType=INTEGER},
      </if>
      <if test="record.disabled != null">
        disabled = #{record.disabled,jdbcType=CHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    update t_complain_comments
    set comments_id = #{record.commentsId,jdbcType=BIGINT},
      complain_id = #{record.complainId,jdbcType=BIGINT},
      source = #{record.source,jdbcType=CHAR},
      author_id = #{record.authorId,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      image_0 = #{record.image0,jdbcType=VARCHAR},
      image_1 = #{record.image1,jdbcType=VARCHAR},
      image_2 = #{record.image2,jdbcType=VARCHAR},
      image_3 = #{record.image3,jdbcType=VARCHAR},
      image_4 = #{record.image4,jdbcType=VARCHAR},
      last_modified = #{record.lastModified,jdbcType=INTEGER},
      disabled = #{record.disabled,jdbcType=CHAR},
      comment = #{record.comment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    update t_complain_comments
    set comments_id = #{record.commentsId,jdbcType=BIGINT},
      complain_id = #{record.complainId,jdbcType=BIGINT},
      source = #{record.source,jdbcType=CHAR},
      author_id = #{record.authorId,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      image_0 = #{record.image0,jdbcType=VARCHAR},
      image_1 = #{record.image1,jdbcType=VARCHAR},
      image_2 = #{record.image2,jdbcType=VARCHAR},
      image_3 = #{record.image3,jdbcType=VARCHAR},
      image_4 = #{record.image4,jdbcType=VARCHAR},
      last_modified = #{record.lastModified,jdbcType=INTEGER},
      disabled = #{record.disabled,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cnit.yoyo.complain.model.ComplainComments">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    update t_complain_comments
    <set>
      <if test="complainId != null">
        complain_id = #{complainId,jdbcType=BIGINT},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=CHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="image0 != null">
        image_0 = #{image0,jdbcType=VARCHAR},
      </if>
      <if test="image1 != null">
        image_1 = #{image1,jdbcType=VARCHAR},
      </if>
      <if test="image2 != null">
        image_2 = #{image2,jdbcType=VARCHAR},
      </if>
      <if test="image3 != null">
        image_3 = #{image3,jdbcType=VARCHAR},
      </if>
      <if test="image4 != null">
        image_4 = #{image4,jdbcType=VARCHAR},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=INTEGER},
      </if>
      <if test="disabled != null">
        disabled = #{disabled,jdbcType=CHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comments_id = #{commentsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cnit.yoyo.complain.model.ComplainComments">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    update t_complain_comments
    set complain_id = #{complainId,jdbcType=BIGINT},
      source = #{source,jdbcType=CHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      image_0 = #{image0,jdbcType=VARCHAR},
      image_1 = #{image1,jdbcType=VARCHAR},
      image_2 = #{image2,jdbcType=VARCHAR},
      image_3 = #{image3,jdbcType=VARCHAR},
      image_4 = #{image4,jdbcType=VARCHAR},
      last_modified = #{lastModified,jdbcType=INTEGER},
      disabled = #{disabled,jdbcType=CHAR},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where comments_id = #{commentsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cnit.yoyo.complain.model.ComplainComments">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 29 14:46:58 CST 2015.
    -->
    update t_complain_comments
    set complain_id = #{complainId,jdbcType=BIGINT},
      source = #{source,jdbcType=CHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      image_0 = #{image0,jdbcType=VARCHAR},
      image_1 = #{image1,jdbcType=VARCHAR},
      image_2 = #{image2,jdbcType=VARCHAR},
      image_3 = #{image3,jdbcType=VARCHAR},
      image_4 = #{image4,jdbcType=VARCHAR},
      last_modified = #{lastModified,jdbcType=INTEGER},
      disabled = #{disabled,jdbcType=CHAR}
    where comments_id = #{commentsId,jdbcType=BIGINT}
  </update>
</mapper>